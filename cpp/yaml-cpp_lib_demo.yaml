# This file is part of eRCaGuy_hello_world: https://github.com/ElectricRCAircraftGuy/eRCaGuy_hello_world

name: yaml-cpp_demo.yaml
description: This is a demo yaml file that can be imported, for example, by the yaml-cpp library.
author: Gabriel Staples
date: Aug. 2022

# list of dictionaries (maps)
# - Note: practice using a couple YAML anchors and aliases too.
#   See: https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/
data:

  # Positions
  - name: x
    description: x position
    units: mm
    type: int64_t
    value: 100
    # What happens if we have the same key twice? Does yaml-cpp throw an error? Does it retain
    # only the first one? Only the last one?
    # - Answer, through observation: it stores both, so if you print the whole node here you'll get
    #   both. BUT, if you ask for the "value" of this Map node you'll get only the FIRST one, which
    #   reads 100 (as specified just above)!
    # - I think more-correct behavior, however, would be for yaml-cpp to throw an error while
    #   loading the file, as I think having duplicate keys like this is NOT a valid YAML file. But,
    #   I suppose that depends on what you really want? Yeah, throwing an error is probably better,
    #   so that no-one using the library thinks that the **last** value is retained and overriding
    #   the first, when in fact the first overrides the last in the current implementation of
    #   yaml-cpp.
    # - This behavior might not be consistent. I've only tested this one case, and the keys in the
    #   map may not actually be ordered. So, your results may vary, perhaps. I'd call this
    #   "undefined behavior", as far as YAML file definitions go, and as far as the user "contract"
    #   goes when using yaml-cpp.
    value: 999
  - name: y
    description: y position
    units: mm
    type: int64_t
    value: 200
  - name: z
    description: z position
    units: mm
    type: int64_t
    value: 300

  # Velocities
  - name: u
    description: velocity in the x direction
    units: mm/s
    type: int64_t
    value: 10
  - name: v
    description: velocity in the y direction
    units: mm/s
    type: int64_t
    value: 11
  - name: w
    description: velocity in the z direction
    units: mm/s
    type: int64_t
    value: 12

  # Euler Angles
  - &phi_anchor
    name: phi
    description: roll angle
    units: deg
    type: double
    value: 0.10
  - name: theta
    description: pitch angle
    units: deg
    type: double
    value: -0.20
  - name: psi
    description: yaw angle (heading)
    units: deg
    type: double
    value: 45.1234

  # Practice referencing an anchor via an alias
  - *phi_anchor

  # Same as above, but override `description` and `value`
  # See: https://yaml.org/type/merge.html
  # Doesn't seem to work as expected, so comment it out! I'm not sure if it's my syntax that's a
  # problem, or a bug in the yaml-cpp library, but I think it's a bug in the library. Note: the
  # parser does read this in without throwing an error. It just doesn't represent or print this last
  # node in the sequence (list) correctly is all.
  # - # Override
  #   <<: *phi_anchor
  #   description: roll angle yeah!
  #   value: 0.1020304
